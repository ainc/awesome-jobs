- if !user_signed_in?
  .col-md-12
    .jumbotron.text-center
      %h1= t('join_us')
      %br
      %p
        The Awesome Inc Jobs Board is a place to find out about tech job openings in Lexington, Louisville, Cincinnati/NKY, and throughout Kentucky. Employers can use this site to add and manage job listings, and and people seeking jobs can post info like experience and GitHub/LinkedIn profiles. Feel free to email
        %a{href:'mailto:jobs.awesomeinc.org'} jobs@awesomeinc.org
        for any assistance.
      %br
      = link_to "<span class='glyphicon glyphicon-user'></span> #{t('sign_in')}".html_safe, new_user_session_path ,class: 'btn btn-primary btn-lg'
      %br
      %br
      = link_to "<span class='glyphicon glyphicon-plus'></span> #{t('sign_up')}".html_safe, new_user_registration_path, class: 'btn btn-lg btn-success'
- else
  .col-md-4
    .content.text-center
      %h2= t('welcome')
      %h3
        = image_tag current_user.avatar_url(:smaller), class: 'img-circle smaller'
        = link_to t('your_profile'), show_user_path(username: current_user.username)
      %button{class: 'btn btn-success navbar-btn btn-lg', 'data-toggle' => "modal", 'data-target' => "#myModal"}
        = current_user.is_employer ? t('new_job') : t('new_work')
        %span.glyphicon.glyphicon-plus

  .col-md-8
    - if @jobs.count > 0 or @possible_jobs.count == 0
      .content
        %h1.text-center= t('watching_jobs')
        %br
        .text-center
          = will_paginate @jobs, param_name: :page
          - @jobs.each do |j|
            %h2
              = link_to j.title, show_job_path(id: j.id)
            %p= truncate(j.description, length: 50)
            = image_tag j.user.avatar_url(:thumb), class: 'img-circle thumb'
            - if j.user.company and !j.user.company.blank?
              = link_to "#{t('by')} #{j.user.name} #{t('at')} #{j.user.company}", show_user_path(username: j.user.username)
            - else
              = link_to j.user.name, show_user_path(username: j.user.username)
          %br
          = will_paginate @jobs, param_name: :page
    - if @possible_jobs.count > 0
      .content
        %h1.text-center= t('new_jobs')
        %br
        .text-center
          = link_to t('see_all_jobs'), show_jobs_path
        .text-center
          - @possible_jobs.each do |j|
            %h2
              = link_to j.title, show_job_path(id: j.id)
            %p= truncate(j.description, length: 50)
            = image_tag j.user.avatar_url(:thumb), class: 'img-circle thumb'
            - if j.user.company and !j.user.company.blank?
              = link_to "#{t('by')} #{j.user.name} #{t('at')} #{j.user.company}", show_user_path(username: j.user.username)
            - else
              = link_to j.user.name, show_user_path(username: j.user.username)
          - if @possible_jobs.count == 0
            %i= t('nothing_here')
        %br
        .text-center
          = link_to t('see_all_jobs'), show_jobs_path

  #myModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", role: "dialog", tabindex: "-1"}
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{"data-dismiss" => "modal", type: "button"}
            %span{"aria-hidden" => "true"} Ã—
            %span.sr-only= t('close')
          %h4#myModalLabel.modal-title.text-center= current_user.is_employer ? t('new_job') : t('new_work')
        .modal-body
          - if current_user.is_employer
            = form_for @job, url: create_job_path, remote: true do |f|
              #job-title-group.form-group
                = f.label :title, class: 'control-label'
                = f.text_field :title, class: 'form-control input-lg', autocomplete: 'off', placeholder: t('job_title_placeholder'), maxlength: 50
              %br
              .form-group
                = f.label :url, class: 'control-label'
                = f.text_field :url, class: 'form-control input-lg', autocomplete: 'off', placeholder: t('website_placeholder'), maxlength: 100
              %br
              #job-description-group.form-group
                = f.label :description, class: 'control-label'
                = f.text_area :description, class: 'form-control input-lg', autocomplete: 'off', rows: 7, placeholder: t('job_description_placeholder'), maxlength: 1000
              %br
              %div.text-center
                %button{type: 'submit', class: 'btn btn-success btn-lg'}= "<span class='glyphicon glyphicon-plus'></span> #{t('add')}".html_safe
          - else
            = form_for @work, url: create_work_path, remote: true do |f|
              #work-title-group.form-group
                = f.label :title, class: 'control-label'
                = f.text_field :title, class: 'form-control input-lg', autocomplete: 'off', placeholder: t('work_title_placeholder'), maxlength: 50
              %br
              #work-url-group.form-group
                = f.label :url, class: 'control-label'
                = f.text_field :url, class: 'form-control input-lg', autocomplete: 'off', placeholder: t('work_url_placeholder'), maxlength: 100
              %br
              #work-description-group.form-group
                = f.label :description, class: 'control-label'
                = f.text_area :description, class: 'form-control input-lg', autocomplete: 'off', rows: 7, placeholder: t('work_description_placeholder'), maxlength: 1000
              %br
              %div.text-center
                %button{type: 'submit', class: 'btn btn-success btn-lg'}= "<span class='glyphicon glyphicon-plus'></span> #{t('add')}".html_safe
